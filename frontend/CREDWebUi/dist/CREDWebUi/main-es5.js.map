{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/config/rest-endpoint.config.ts","webpack:///src/app/exceptions/Exception.ts","webpack:///src/app/exceptions/JwtExceptions.ts","webpack:///src/app/exceptions/RestException.ts","webpack:///src/app/manage-users/manage-users.component.html","webpack:///src/app/manage-users/manage-users.component.ts","webpack:///src/app/models/Employee.ts","webpack:///src/app/services/employee-service.ts","webpack:///src/app/services/rest-api-service.ts","webpack:///src/app/users-list/users-list.component.html","webpack:///src/app/users-list/users-list.component.ts","webpack:///src/app/users/users.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","API_END_POINTS","Exception","error","exceptionType","message","debug","console","log","JwtExceptions","err","RestException","ManageUsersComponent","fb","http","emp","firstNameControl","required","minLength","maxLength","lastNameControl","genderControl","dobControl","deptControl","depts","Map","genders","set","employees","group","firstName","lastName","gender","dob","dept","ADD_EMPLOYEE","add","createEmployeeFromForm","httpClientResponse","notify","NEW_USER_ADD_SUCCESS","f","value","formatDate","Date","department","d","formattedDate","getDate","getMonth","getFullYear","createUser","Employee","EMPLOYEE_SERVICE_STATUS","EmployeeService","listChange","filter","api","setProperties","PAYLOAD","filterData","element","postData","n","next","providedState","cb","subscribe","state","elements","jwt","REST_API_PROPERTIES","RESTApiServiceForEmployee","httpClient","actionPath","NODATA","apiOptions","HEADERS","URL","BASE_PATH","key","headers","get","httpHeaders","METHOD","post","prepareProperties","toPromise","JWT","response","reject","body","getJwt","ELEMENT_DATA","UsersListComponent","displayedColumns","dataSource","sort","paginator","listUser","listen","LIST_EMPLOYEE","search","data","UsersModule","provide","useClass","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CREDWebUi';\n}\n","<div class=\"toolbar\" role=\"banner\">\n    <span class=\"title\">Employee Portal</span>\n    <div class=\"spacer\"></div>\n</div>\n\n<div class=\"content\" role=\"main\">\n\n    <!-- Highlight Card -->\n    <!-- <div class=\"card highlight-card card-small\">\n\n  \n      <span>{{ title }} app is running!</span>\n\n  \n    </div>\n   -->\n    <!-- Resources -->\n    <h2>Employee Registration </h2>\n    \n    <div class=\"card-container\">\n        <app-manage-users></app-manage-users>\n    </div>\n\n    <!-- Next Steps -->\n    <h2>List of Registered Employees</h2>\n    <p>\n        <app-users-list></app-users-list>\n    </p>\n\n<router-outlet></router-outlet>\n\n\n    <!-- Footer -->\n    <footer>\n        <!-- This is a demo boilerplate application -->\n    </footer>\n\n    <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\"\n        viewBox=\"0 0 2611.084 485.677\">\n        <path id=\"Path_39\" data-name=\"Path 39\"\n            d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\"\n            transform=\"translate(142.69 -634.312)\" fill=\"#eee\" />\n    </svg>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {UsersModule} from './users/users.module';\nimport { HttpClientModule  } from '@angular/common/http';\nimport { EmployeeService } from './services/employee-service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule ,\n    UsersModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum API_END_POINTS{\r\n    BASE_PATH='/app/api/',\r\n    ADD_EMPLOYEE='add',\r\n    LIST_EMPLOYEE='list',\r\n    JWT='jwt',\r\n    NODATA='nodata'\r\n}","import { isDevMode } from \"@angular/core\";\r\nimport {environment} from '../../environments/environment';\r\nexport class Exception extends Error {\r\n    constructor(error, exceptionType:string) {\r\n        super(error.message);\r\n        if(environment.debug){\r\n            console.log('['+exceptionType+']',error.message);\r\n        }\r\n        throw new Error(error.message);\r\n    }\r\n}","import { IException } from \"./IExceptions\";\r\nimport { Exception } from \"./Exception\";\r\n\r\nexport class JwtExceptions extends Exception {\r\n    constructor(err){\r\n        super(err, 'JWTException'); \r\n    }\r\n}","import { IException } from \"./IExceptions\";\r\nimport { Exception } from \"./Exception\";\r\n\r\nexport class RestException extends Exception {\r\n    constructor(err){\r\n        super(err, 'RestException'); \r\n    }\r\n}","<div class=\"employee-container\">\n  <form [formGroup]=\"employees\">\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"firstNameControl.value\">\n      <mat-label>First Name</mat-label>\n      <input matInput placeholder=\"Employee first name\" [formControl]=\"firstNameControl\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"lastNameControl.value\">\n      <mat-label>Last Name</mat-label>\n      <input matInput placeholder=\"Employee last name\" [formControl]=\"lastNameControl\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"dobControl.value\">\n      <mat-label>Date of Birth</mat-label>\n      <input matInput [matDatepicker]=\"picker1\" [formControl]=\"dobControl\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n    </mat-form-field>\n    \n    <mat-form-field appearance=\"fill\"\n        [hideRequiredMarker]=\"true\"\n        [floatLabel]=\"deptControl.value\">\n      <mat-select [formControl]=\"deptControl\">\n        <mat-option *ngFor=\"let dept of depts | keyvalue\" [value]=\"dept.key\">{{dept.value}}</mat-option>\n      </mat-select>\n      <mat-label>Department</mat-label>\n    </mat-form-field>\n\n    <section>\n    <div class=\"employee-button-row\">\n      <label>Gender </label>\n      <mat-radio-group [formControl]=\"genderControl\">\n        <mat-radio-button *ngFor=\"let gender of genders | keyvalue\" [value]=\"gender.key\">{{gender.value}}</mat-radio-button>\n      </mat-radio-group>\n\n      <button mat-flat-button color=\"primary\" [disabled]=\"!employees.valid\" (click)=\"createUser()\">Register</button>\n\n    </div>\n    </section>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { RESTApiServiceForEmployee, REST_API_PROPERTIES } from '../services/rest-api-service';\nimport { EmployeeService, EMPLOYEE_SERVICE_STATUS} from '../services/employee-service';\nimport { Employee } from '../models/Employee';\nimport { IApiService } from '../services/IApiService';\nimport { API_END_POINTS } from '../config/rest-endpoint.config';\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.scss']\n})\nexport class ManageUsersComponent implements OnInit {\n\n  employees: FormGroup;\n\n  firstNameControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  lastNameControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  genderControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  dobControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  deptControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n\n  depts:Map<string, string> = new Map <string, string>(); \n  genders:Map<string, string> = new Map <string, string>(); \n\n\n  constructor(fb: FormBuilder, private http:HttpClient, private emp:EmployeeService) {\n\n    this.depts.set('dep1', 'DEPT 1')\n              .set('dep2', 'DEPT 2')\n              .set('dep3', 'DEPT 3');\n\n    this.genders.set('female', 'Female')\n             .set('male', 'Male')\n             .set('other', 'Other');\n\n    this.employees = fb.group({\n      firstName: this.firstNameControl,\n      lastName: this.lastNameControl,\n      gender: this.genderControl,\n      dob: this.dobControl,\n      dept: this.deptControl,\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  async createUser() {\n    try {\n      let e:IApiService<Employee> = new RESTApiServiceForEmployee (this.http, API_END_POINTS.ADD_EMPLOYEE );\n\n      let httpClientResponse = await this.emp.add(this.createEmployeeFromForm(this.employees), e);\n\n      this.emp.notify(EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS);\n\n    } catch (e){\n      console.log(<HttpErrorResponse> e.message);\n    }\n  }\n\n  createEmployeeFromForm(f: FormGroup):Employee{\n    let e:Employee = new Employee();\n    e.firstName = f.value.firstName;\n    e.lastName=  f.value.lastName;\n    e.dob=  this.formatDate(new Date(f.value.dob))\n    e.gender=  f.value.gender;\n    e.department=  f.value.dept;\n    return e;\n  }\n  formatDate(d:Date):String{\n    let formattedDate = d.getDate()+\"/\"+d.getMonth()+\"/\"+d.getFullYear();\n    return formattedDate;\n  }\n\n}\n","export class Employee {\r\n    firstName;\r\n    lastName;\r\n    dob;\r\n    department;\r\n    gender;\r\n}","import { Employee } from \"../models/Employee\";\r\nimport { IModelService } from \"./IModelService\";\r\nimport { IApiService } from './IApiService';\r\nimport { REST_API_PROPERTIES } from './rest-api-service';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport enum EMPLOYEE_SERVICE_STATUS {\r\n    NEW_USER_ADD_SUCCESS=\"new_user_add_success\"\r\n}\r\n\r\nexport class EmployeeService implements IModelService<Employee> {\r\n\r\n    private listChange:Subject<EMPLOYEE_SERVICE_STATUS> = new Subject<EMPLOYEE_SERVICE_STATUS>();\r\n\r\n    search(filter:{[fieldName:string]:string|number}, api: IApiService<Employee> ):  Promise<Employee[]> {\r\n        api.setProperties(REST_API_PROPERTIES.PAYLOAD, filter);\r\n        return api.filterData(filter);\r\n    }\r\n    add(element: Employee, api: IApiService<Employee>): Promise<Employee> {\r\n        api.setProperties(REST_API_PROPERTIES.PAYLOAD, element);\r\n        return api.postData(element);\r\n    }\r\n    notify(n:EMPLOYEE_SERVICE_STATUS){\r\n        if(n === EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS){\r\n            this.listChange.next(EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS);\r\n        }\r\n    }\r\n    listen(providedState:EMPLOYEE_SERVICE_STATUS, cb:Function){\r\n        this.listChange.subscribe((state:EMPLOYEE_SERVICE_STATUS) => {\r\n            if(providedState === state){\r\n                cb();\r\n            }\r\n        })\r\n    }\r\n    update(elements: Employee[]): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    delete(elements: Employee[]): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    get(): Employee[] {\r\n        return [];\r\n    }\r\n    private formatPayload (e:Employee):any {\r\n\r\n    }\r\n}","import { IApiService } from \"./IApiService\";\r\nimport { Employee } from \"../models/Employee\";\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { JwtExceptions } from \"../exceptions/JwtExceptions\";\r\nimport { RestException } from \"../exceptions/RestException\";\r\nimport { environment } from '../../environments/environment';\r\nimport { API_END_POINTS } from '../config/rest-endpoint.config';\r\nimport { Observable } from \"rxjs\";\r\n\r\nvar jwt;\r\n\r\nexport enum REST_API_PROPERTIES {\r\n    HEADERS = 'headers',\r\n    PAYLOAD = 'payload',\r\n    URL = 'url',\r\n    METHOD = 'method'\r\n}\r\n\r\nexport class RESTApiServiceForEmployee implements IApiService<Employee>{\r\n\r\n    private apiOptions: Map<REST_API_PROPERTIES, any> = new Map<REST_API_PROPERTIES, any>();\r\n\r\n    setProperties(key: REST_API_PROPERTIES, value: any): void {\r\n        this.apiOptions.set(key, value);\r\n    }\r\n\r\n    private prepareProperties(): Observable<Employee> {\r\n        if (!this.apiOptions) throw new Error('ApiOptions is not set!!');\r\n\r\n        let headers = this.apiOptions.get(REST_API_PROPERTIES.HEADERS);\r\n        let httpHeaders: HttpHeaders;\r\n        if (headers) {\r\n            httpHeaders = new HttpHeaders(headers)\r\n        }\r\n        if (this.apiOptions.get(REST_API_PROPERTIES.METHOD) == 'GET') {\r\n            return <Observable<Employee>> this.httpClient.get(this.apiOptions.get(REST_API_PROPERTIES.URL), { headers: httpHeaders });\r\n        }\r\n        if (this.apiOptions.get(REST_API_PROPERTIES.METHOD) == 'POST') {\r\n            return <Observable<Employee>> this.httpClient.post(\r\n                this.apiOptions.get(REST_API_PROPERTIES.URL),\r\n                this.apiOptions.get(REST_API_PROPERTIES.PAYLOAD),\r\n                { headers: httpHeaders }\r\n            );\r\n        }\r\n    }\r\n    getData(): Promise<Employee> {\r\n        this.apiOptions.set(REST_API_PROPERTIES.METHOD, 'GET');\r\n        return this.prepareProperties().toPromise();\r\n    }\r\n    postData(): Promise<Employee> {\r\n        this.apiOptions.set(REST_API_PROPERTIES.METHOD, 'POST');\r\n        return this.prepareProperties().toPromise();\r\n    }\r\n    \r\n    filterData(): Promise<Employee[]> {\r\n        if (!this.apiOptions) throw new Error('ApiOptions is not set!!');\r\n\r\n        let headers = this.apiOptions.get(REST_API_PROPERTIES.HEADERS);\r\n        let httpHeaders: HttpHeaders;\r\n        if (headers) {\r\n            httpHeaders = new HttpHeaders(headers)\r\n        }\r\n        return <Promise<Employee[]>> this.httpClient.post(\r\n            this.apiOptions.get(REST_API_PROPERTIES.URL),\r\n            this.apiOptions.get(REST_API_PROPERTIES.PAYLOAD),\r\n            { headers: httpHeaders }\r\n        ).toPromise();\r\n    }\r\n\r\n    async getJwt(): Promise<string> {\r\n        try {\r\n            let response:{ [body:string]: any}  = await this.httpClient.get(API_END_POINTS.BASE_PATH + API_END_POINTS.JWT).toPromise();\r\n            return new Promise<string>((resolve, reject) => {\r\n                if((response?.body)?.jwt) {\r\n                    resolve(response.body.jwt)\r\n                } else {\r\n                    reject( new JwtExceptions(new Error('jwt invalid token')))\r\n                }\r\n            });\r\n        } catch (e) {\r\n            throw new JwtExceptions(new Error('jwt api failed'));\r\n        }\r\n    }\r\n\r\n    async initJWt() {\r\n        try {\r\n            if (jwt) {\r\n                return jwt;\r\n            } else {\r\n                jwt = await this.getJwt();\r\n            }\r\n        } catch (e) {\r\n            new RestException(e);\r\n        }\r\n\r\n    }\r\n\r\n    constructor(private httpClient: HttpClient, actionPath = API_END_POINTS.NODATA) {\r\n        this.apiOptions.set(REST_API_PROPERTIES.HEADERS, [{ 'content-type': 'application/json' }, { 'Authentication': 'Bearer ' + jwt }]);\r\n        this.apiOptions.set(REST_API_PROPERTIES.PAYLOAD, []);\r\n        this.apiOptions.set(REST_API_PROPERTIES.URL, API_END_POINTS.BASE_PATH + actionPath);\r\n    }\r\n\r\n}","<div class=\"mat-elevation-z8 fluid\">\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"fluid\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"firstName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"lastName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\n    </ng-container>\n\n    <!-- Gender Column -->\n    <ng-container matColumnDef=\"gender\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Gender </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"dob\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date of Birth </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.dob}} </td>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"department\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 40]\" showFirstLastButtons></mat-paginator>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { IApiService } from '../services/IApiService';\nimport { Employee } from '../models/Employee';\nimport { RESTApiServiceForEmployee, REST_API_PROPERTIES } from '../services/rest-api-service';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { API_END_POINTS } from '../config/rest-endpoint.config';\nimport { EmployeeService, EMPLOYEE_SERVICE_STATUS } from '../services/employee-service';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: Employee[] = [];\n\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n\n  displayedColumns: string[] = ['firstName', 'lastName', 'dob', 'department', 'gender'];\n  dataSource:MatTableDataSource<Employee> = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.listUser();\n    this.emp.listen(EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS, () => this.listUser());\n  }\n  constructor(private http:HttpClient, private emp:EmployeeService){\n\n  }\n\n  async listUser() {\n    try {\n      let e:IApiService<Employee> = new RESTApiServiceForEmployee (this.http, API_END_POINTS.LIST_EMPLOYEE );\n\n      let httpClientResponse = await this.emp.search( null , e);\n      if(httpClientResponse) {\n        this.dataSource.data =  httpClientResponse;\n      }\n\n    } catch (e){\n      console.log(<HttpErrorResponse> e.message);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ManageUsersComponent } from '../manage-users/manage-users.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\n// import {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport { UsersListComponent } from '../users-list/users-list.component';\n\n\n@NgModule({\n  declarations: [\n    ManageUsersComponent,\n    UsersListComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    A11yModule,\n//    ClipboardModule,\n//    CdkStepperModule,\n//    CdkTableModule,\n//    CdkTreeModule,\n//    DragDropModule,\n    MatAutocompleteModule,\n//    MatBadgeModule,\n//    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n//    MatStepperModule,\n    MatDatepickerModule,\n//    MatDialogModule,\n//    MatDividerModule,\n//    MatExpansionModule,\n//    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n//    MatListModule,\n//    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n//    MatProgressBarModule,\n//    MatProgressSpinnerModule,\n    MatRadioModule,\n//    MatRippleModule,\n    MatSelectModule,\n//    MatSidenavModule,\n//    MatSliderModule,\n//    MatSlideToggleModule,\n//    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n//    MatTabsModule,\n//    MatToolbarModule,\n//    MatTooltipModule,\n//    MatTreeModule,\n//    OverlayModule,\n//    PortalModule,\n//    ScrollingModule,\n  ],\n  exports: [\n    ManageUsersComponent, UsersListComponent\n  ],\n  providers: [\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}\n  ]\n})\nexport class UsersModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  debug: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}