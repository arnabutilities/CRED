{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/config/rest-endpoint.config.ts","./src/app/exceptions/Exception.ts","./src/app/exceptions/JwtExceptions.ts","./src/app/exceptions/RestException.ts","./src/app/manage-users/manage-users.component.ts","./src/app/manage-users/manage-users.component.html","./src/app/models/Employee.ts","./src/app/services/employee-service.ts","./src/app/services/rest-api-service.ts","./src/app/users-list/users-list.component.ts","./src/app/users-list/users-list.component.html","./src/app/users/users.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CREDWebUi';\n}\n","<div class=\"toolbar\" role=\"banner\">\n    <span class=\"title\">Employee Portal</span>\n    <div class=\"spacer\"></div>\n</div>\n\n<div class=\"content\" role=\"main\">\n\n    <!-- Highlight Card -->\n    <!-- <div class=\"card highlight-card card-small\">\n\n  \n      <span>{{ title }} app is running!</span>\n\n  \n    </div>\n   -->\n    <!-- Resources -->\n    <h2>Employee Registration </h2>\n    \n    <div class=\"card-container\">\n        <app-manage-users></app-manage-users>\n    </div>\n\n    <!-- Next Steps -->\n    <h2>List of Registered Employees</h2>\n    <p>\n        <app-users-list></app-users-list>\n    </p>\n\n<router-outlet></router-outlet>\n\n\n    <!-- Footer -->\n    <footer>\n        <!-- This is a demo boilerplate application -->\n    </footer>\n\n    <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\"\n        viewBox=\"0 0 2611.084 485.677\">\n        <path id=\"Path_39\" data-name=\"Path 39\"\n            d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\"\n            transform=\"translate(142.69 -634.312)\" fill=\"#eee\" />\n    </svg>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {UsersModule} from './users/users.module';\nimport { HttpClientModule  } from '@angular/common/http';\nimport { EmployeeService } from './services/employee-service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule ,\n    UsersModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum API_END_POINTS{\r\n    BASE_PATH='/app/api/',\r\n    ADD_EMPLOYEE='add',\r\n    LIST_EMPLOYEE='list',\r\n    JWT='jwt',\r\n    NODATA='nodata'\r\n}","import { isDevMode } from \"@angular/core\";\r\nimport {environment} from '../../environments/environment';\r\nexport class Exception extends Error {\r\n    constructor(error, exceptionType:string) {\r\n        super(error.message);\r\n        if(environment.debug){\r\n            console.log('['+exceptionType+']',error.message);\r\n        }\r\n        throw new Error(error.message);\r\n    }\r\n}","import { IException } from \"./IExceptions\";\r\nimport { Exception } from \"./Exception\";\r\n\r\nexport class JwtExceptions extends Exception {\r\n    constructor(err){\r\n        super(err, 'JWTException'); \r\n    }\r\n}","import { IException } from \"./IExceptions\";\r\nimport { Exception } from \"./Exception\";\r\n\r\nexport class RestException extends Exception {\r\n    constructor(err){\r\n        super(err, 'RestException'); \r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { RESTApiServiceForEmployee, REST_API_PROPERTIES } from '../services/rest-api-service';\nimport { EmployeeService, EMPLOYEE_SERVICE_STATUS} from '../services/employee-service';\nimport { Employee } from '../models/Employee';\nimport { IApiService } from '../services/IApiService';\nimport { API_END_POINTS } from '../config/rest-endpoint.config';\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.scss']\n})\nexport class ManageUsersComponent implements OnInit {\n\n  employees: FormGroup;\n\n  firstNameControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  lastNameControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  genderControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  dobControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n  deptControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(2),\n    Validators.maxLength(56)\n  ]);\n\n  depts:Map<string, string> = new Map <string, string>(); \n  genders:Map<string, string> = new Map <string, string>(); \n\n\n  constructor(fb: FormBuilder, private http:HttpClient, private emp:EmployeeService) {\n\n    this.depts.set('dep1', 'DEPT 1')\n              .set('dep2', 'DEPT 2')\n              .set('dep3', 'DEPT 3');\n\n    this.genders.set('female', 'Female')\n             .set('male', 'Male')\n             .set('other', 'Other');\n\n    this.employees = fb.group({\n      firstName: this.firstNameControl,\n      lastName: this.lastNameControl,\n      gender: this.genderControl,\n      dob: this.dobControl,\n      dept: this.deptControl,\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  async createUser() {\n    try {\n      let e:IApiService<Employee> = new RESTApiServiceForEmployee (this.http, API_END_POINTS.ADD_EMPLOYEE );\n\n      let httpClientResponse = await this.emp.add(this.createEmployeeFromForm(this.employees), e);\n\n      this.emp.notify(EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS);\n\n    } catch (e){\n      console.log(<HttpErrorResponse> e.message);\n    }\n  }\n\n  createEmployeeFromForm(f: FormGroup):Employee{\n    let e:Employee = new Employee();\n    e.firstName = f.value.firstName;\n    e.lastName=  f.value.lastName;\n    e.dob=  this.formatDate(new Date(f.value.dob))\n    e.gender=  f.value.gender;\n    e.department=  f.value.dept;\n    return e;\n  }\n  formatDate(d:Date):String{\n    let formattedDate = d.getDate()+\"/\"+d.getMonth()+\"/\"+d.getFullYear();\n    return formattedDate;\n  }\n\n}\n","<div class=\"employee-container\">\n  <form [formGroup]=\"employees\">\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"firstNameControl.value\">\n      <mat-label>First Name</mat-label>\n      <input matInput placeholder=\"Employee first name\" [formControl]=\"firstNameControl\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"lastNameControl.value\">\n      <mat-label>Last Name</mat-label>\n      <input matInput placeholder=\"Employee last name\" [formControl]=\"lastNameControl\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"dobControl.value\">\n      <mat-label>Date of Birth</mat-label>\n      <input matInput [matDatepicker]=\"picker1\" [formControl]=\"dobControl\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n    </mat-form-field>\n    \n    <mat-form-field appearance=\"fill\"\n        [hideRequiredMarker]=\"true\"\n        [floatLabel]=\"deptControl.value\">\n      <mat-select [formControl]=\"deptControl\">\n        <mat-option *ngFor=\"let dept of depts | keyvalue\" [value]=\"dept.key\">{{dept.value}}</mat-option>\n      </mat-select>\n      <mat-label>Department</mat-label>\n    </mat-form-field>\n\n    <section>\n    <div class=\"employee-button-row\">\n      <label>Gender </label>\n      <mat-radio-group [formControl]=\"genderControl\">\n        <mat-radio-button *ngFor=\"let gender of genders | keyvalue\" [value]=\"gender.key\">{{gender.value}}</mat-radio-button>\n      </mat-radio-group>\n\n      <button mat-flat-button color=\"primary\" [disabled]=\"!employees.valid\" (click)=\"createUser()\">Register</button>\n\n    </div>\n    </section>\n  </form>\n</div>\n","export class Employee {\r\n    firstName;\r\n    lastName;\r\n    dob;\r\n    department;\r\n    gender;\r\n}","import { Employee } from \"../models/Employee\";\r\nimport { IModelService } from \"./IModelService\";\r\nimport { IApiService } from './IApiService';\r\nimport { REST_API_PROPERTIES } from './rest-api-service';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport enum EMPLOYEE_SERVICE_STATUS {\r\n    NEW_USER_ADD_SUCCESS=\"new_user_add_success\"\r\n}\r\n\r\nexport class EmployeeService implements IModelService<Employee> {\r\n\r\n    private listChange:Subject<EMPLOYEE_SERVICE_STATUS> = new Subject<EMPLOYEE_SERVICE_STATUS>();\r\n\r\n    search(filter:{[fieldName:string]:string|number}, api: IApiService<Employee> ):  Promise<Employee[]> {\r\n        api.setProperties(REST_API_PROPERTIES.PAYLOAD, filter);\r\n        return api.filterData(filter);\r\n    }\r\n    add(element: Employee, api: IApiService<Employee>): Promise<Employee> {\r\n        api.setProperties(REST_API_PROPERTIES.PAYLOAD, element);\r\n        return api.postData(element);\r\n    }\r\n    notify(n:EMPLOYEE_SERVICE_STATUS){\r\n        if(n === EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS){\r\n            this.listChange.next(EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS);\r\n        }\r\n    }\r\n    listen(providedState:EMPLOYEE_SERVICE_STATUS, cb:Function){\r\n        this.listChange.subscribe((state:EMPLOYEE_SERVICE_STATUS) => {\r\n            if(providedState === state){\r\n                cb();\r\n            }\r\n        })\r\n    }\r\n    update(elements: Employee[]): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    delete(elements: Employee[]): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    get(): Employee[] {\r\n        return [];\r\n    }\r\n    private formatPayload (e:Employee):any {\r\n\r\n    }\r\n}","import { IApiService } from \"./IApiService\";\r\nimport { Employee } from \"../models/Employee\";\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { JwtExceptions } from \"../exceptions/JwtExceptions\";\r\nimport { RestException } from \"../exceptions/RestException\";\r\nimport { environment } from '../../environments/environment';\r\nimport { API_END_POINTS } from '../config/rest-endpoint.config';\r\nimport { Observable } from \"rxjs\";\r\n\r\nvar jwt;\r\n\r\nexport enum REST_API_PROPERTIES {\r\n    HEADERS = 'headers',\r\n    PAYLOAD = 'payload',\r\n    URL = 'url',\r\n    METHOD = 'method'\r\n}\r\n\r\nexport class RESTApiServiceForEmployee implements IApiService<Employee>{\r\n\r\n    private apiOptions: Map<REST_API_PROPERTIES, any> = new Map<REST_API_PROPERTIES, any>();\r\n\r\n    setProperties(key: REST_API_PROPERTIES, value: any): void {\r\n        this.apiOptions.set(key, value);\r\n    }\r\n\r\n    private prepareProperties(): Observable<Employee> {\r\n        if (!this.apiOptions) throw new Error('ApiOptions is not set!!');\r\n\r\n        let headers = this.apiOptions.get(REST_API_PROPERTIES.HEADERS);\r\n        let httpHeaders: HttpHeaders;\r\n        if (headers) {\r\n            httpHeaders = new HttpHeaders(headers)\r\n        }\r\n        if (this.apiOptions.get(REST_API_PROPERTIES.METHOD) == 'GET') {\r\n            return <Observable<Employee>> this.httpClient.get(this.apiOptions.get(REST_API_PROPERTIES.URL), { headers: httpHeaders });\r\n        }\r\n        if (this.apiOptions.get(REST_API_PROPERTIES.METHOD) == 'POST') {\r\n            return <Observable<Employee>> this.httpClient.post(\r\n                this.apiOptions.get(REST_API_PROPERTIES.URL),\r\n                this.apiOptions.get(REST_API_PROPERTIES.PAYLOAD),\r\n                { headers: httpHeaders }\r\n            );\r\n        }\r\n    }\r\n    getData(): Promise<Employee> {\r\n        this.apiOptions.set(REST_API_PROPERTIES.METHOD, 'GET');\r\n        return this.prepareProperties().toPromise();\r\n    }\r\n    postData(): Promise<Employee> {\r\n        this.apiOptions.set(REST_API_PROPERTIES.METHOD, 'POST');\r\n        return this.prepareProperties().toPromise();\r\n    }\r\n    \r\n    filterData(): Promise<Employee[]> {\r\n        if (!this.apiOptions) throw new Error('ApiOptions is not set!!');\r\n\r\n        let headers = this.apiOptions.get(REST_API_PROPERTIES.HEADERS);\r\n        let httpHeaders: HttpHeaders;\r\n        if (headers) {\r\n            httpHeaders = new HttpHeaders(headers)\r\n        }\r\n        return <Promise<Employee[]>> this.httpClient.post(\r\n            this.apiOptions.get(REST_API_PROPERTIES.URL),\r\n            this.apiOptions.get(REST_API_PROPERTIES.PAYLOAD),\r\n            { headers: httpHeaders }\r\n        ).toPromise();\r\n    }\r\n\r\n    async getJwt(): Promise<string> {\r\n        try {\r\n            let response:{ [body:string]: any}  = await this.httpClient.get(API_END_POINTS.BASE_PATH + API_END_POINTS.JWT).toPromise();\r\n            return new Promise<string>((resolve, reject) => {\r\n                if((response?.body)?.jwt) {\r\n                    resolve(response.body.jwt)\r\n                } else {\r\n                    reject( new JwtExceptions(new Error('jwt invalid token')))\r\n                }\r\n            });\r\n        } catch (e) {\r\n            throw new JwtExceptions(new Error('jwt api failed'));\r\n        }\r\n    }\r\n\r\n    async initJWt() {\r\n        try {\r\n            if (jwt) {\r\n                return jwt;\r\n            } else {\r\n                jwt = await this.getJwt();\r\n            }\r\n        } catch (e) {\r\n            new RestException(e);\r\n        }\r\n\r\n    }\r\n\r\n    constructor(private httpClient: HttpClient, actionPath = API_END_POINTS.NODATA) {\r\n        this.apiOptions.set(REST_API_PROPERTIES.HEADERS, [{ 'content-type': 'application/json' }, { 'Authentication': 'Bearer ' + jwt }]);\r\n        this.apiOptions.set(REST_API_PROPERTIES.PAYLOAD, []);\r\n        this.apiOptions.set(REST_API_PROPERTIES.URL, API_END_POINTS.BASE_PATH + actionPath);\r\n    }\r\n\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { IApiService } from '../services/IApiService';\nimport { Employee } from '../models/Employee';\nimport { RESTApiServiceForEmployee, REST_API_PROPERTIES } from '../services/rest-api-service';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { API_END_POINTS } from '../config/rest-endpoint.config';\nimport { EmployeeService, EMPLOYEE_SERVICE_STATUS } from '../services/employee-service';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: Employee[] = [];\n\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n\n  displayedColumns: string[] = ['firstName', 'lastName', 'dob', 'department', 'gender'];\n  dataSource:MatTableDataSource<Employee> = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.listUser();\n    this.emp.listen(EMPLOYEE_SERVICE_STATUS.NEW_USER_ADD_SUCCESS, () => this.listUser());\n  }\n  constructor(private http:HttpClient, private emp:EmployeeService){\n\n  }\n\n  async listUser() {\n    try {\n      let e:IApiService<Employee> = new RESTApiServiceForEmployee (this.http, API_END_POINTS.LIST_EMPLOYEE );\n\n      let httpClientResponse = await this.emp.search( null , e);\n      if(httpClientResponse) {\n        this.dataSource.data =  httpClientResponse;\n      }\n\n    } catch (e){\n      console.log(<HttpErrorResponse> e.message);\n    }\n  }\n\n}\n","<div class=\"mat-elevation-z8 fluid\">\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"fluid\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"firstName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"lastName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\n    </ng-container>\n\n    <!-- Gender Column -->\n    <ng-container matColumnDef=\"gender\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Gender </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"dob\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date of Birth </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.dob}} </td>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"department\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 40]\" showFirstLastButtons></mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { ManageUsersComponent } from '../manage-users/manage-users.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\n// import {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport { UsersListComponent } from '../users-list/users-list.component';\n\n\n@NgModule({\n  declarations: [\n    ManageUsersComponent,\n    UsersListComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    A11yModule,\n//    ClipboardModule,\n//    CdkStepperModule,\n//    CdkTableModule,\n//    CdkTreeModule,\n//    DragDropModule,\n    MatAutocompleteModule,\n//    MatBadgeModule,\n//    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n//    MatStepperModule,\n    MatDatepickerModule,\n//    MatDialogModule,\n//    MatDividerModule,\n//    MatExpansionModule,\n//    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n//    MatListModule,\n//    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n//    MatProgressBarModule,\n//    MatProgressSpinnerModule,\n    MatRadioModule,\n//    MatRippleModule,\n    MatSelectModule,\n//    MatSidenavModule,\n//    MatSliderModule,\n//    MatSlideToggleModule,\n//    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n//    MatTabsModule,\n//    MatToolbarModule,\n//    MatTooltipModule,\n//    MatTreeModule,\n//    OverlayModule,\n//    PortalModule,\n//    ScrollingModule,\n  ],\n  exports: [\n    ManageUsersComponent, UsersListComponent\n  ],\n  providers: [\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher}\n  ]\n})\nexport class UsersModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  debug: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}